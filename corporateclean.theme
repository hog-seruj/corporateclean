<?php

/**
 * @file
 * Functions to support theming in Adaptivetheme sub-themes.
 */

use Drupal\Core\Url;
use Drupal\at_core\Layout\LayoutLoad;
use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Tags;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Language\Language;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Theme\ThemeSettings;
use Symfony\Component\Yaml\Parser;

/**
 * Alter attachments (typically assets) to a page before it is rendered.
 *
 * Use this hook when you want to remove or alter attachments on the page, or
 * add attachments to the page that depend on another module's attachments (this
 * hook runs after hook_page_attachments().
 *
 * @param array &$page
 *   An empty renderable array representing the page.
 *
 * @see hook_page_attachments_alter()
 */
function corporateclean_preprocess_breadcrumb(&$variables){
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $breadcrumbs = theme_get_setting('breadcrumb_display', $theme);
  $breadcrumbs_home = theme_get_setting('breadcrumb_home', $theme);

  // This variable used in breadcrumb.html.twig
  $variables['breadcrumb_separator'] = theme_get_setting('breadcrumb_separator', $theme);

  if(isset($breadcrumbs) && $breadcrumbs === 1) {
    // Show or hide the Home link.
    $first_item = array_values($variables['breadcrumb'])[0];
    if (isset($first_item['url']) && $first_item['url'] == base_path()) {
      if (isset($breadcrumbs_home) && $breadcrumbs_home === 1) {
        $variables['breadcrumb'];
      } else {
        array_shift($variables['breadcrumb']);
      }
    }
  } else {
    $variables['breadcrumb'] = '';
  }
}

/**
 * Override or insert variables into the html template.
 */
function corporateclean_preprocess_html(&$variables) {
}

/**
 * Override or insert variables into the page template.
 */
function corporateclean_preprocess_page(&$variables) {
  // Add page variable.
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $variables['slideshow_display'] = theme_get_setting('slideshow_display', $theme);

  // Slider settings.
  $slider_settings = &$variables['#attached']['drupalSettings']['slider'];
  $slider_settings['effect'] = theme_get_setting('slideshow_effect', $theme);
  $slider_settings['effectTime'] = (int) theme_get_setting('slideshow_effect_time', $theme)*1000;
  $slider_settings['slideshowRandomize'] = theme_get_setting('slideshow_randomize', $theme);
  $slider_settings['slideshowWrap'] = theme_get_setting('slideshow_wrap', $theme);
  $slider_settings['slideshowPause'] = theme_get_setting('slideshow_pause', $theme);
}

function corporateclean_form_alter(&$form, &$form_state, $form_id) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();

  if ($form_id == 'search_block_form') {
    unset($form['search_block_form']['#title']);

    $form['search_block_form']['#title_display'] = 'invisible';
		$form_default = t('Search');
    $form['search_block_form']['#default_value'] = $form_default;
    $form['actions']['submit'] = array('#type' => 'image_button', '#src' => 'themes/' . $theme . '/images/search-button.png');

 	$form['search_block_form']['#attributes'] = array('onblur' => "if (this.value == '') {this.value = '{$form_default}';}", 'onfocus' => "if (this.value == '{$form_default}') {this.value = '';}" );
  }
}

?>

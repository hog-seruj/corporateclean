<?php

/**
 * @file
 * Functions to support theming in Adaptivetheme sub-themes.
 */

use Drupal\Core\Url;
use Drupal\at_core\Layout\LayoutLoad;
use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Tags;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Language\Language;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Theme\ThemeSettings;
use Symfony\Component\Yaml\Parser;

/**
 * Alter attachments (typically assets) to a page before it is rendered.
 *
 * Use this hook when you want to remove or alter attachments on the page, or
 * add attachments to the page that depend on another module's attachments (this
 * hook runs after hook_page_attachments().
 *
 * @param array &$page
 *   An empty renderable array representing the page.
 *
 * @see hook_page_attachments_alter()
 */
function corporateclean_preprocess_breadcrumb(&$variables){
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $breadcrumbs = theme_get_setting('breadcrumb_display', $theme);
  $breadcrumbs_home = theme_get_setting('breadcrumb_home', $theme);

  // This variable used in breadcrumb.html.twig
  $variables['breadcrumb_separator'] = theme_get_setting('breadcrumb_separator', $theme);

  if(isset($breadcrumbs) && $breadcrumbs === 1) {
    // Show or hide the Home link.
    $first_item = array_values($variables['breadcrumb'])[0];
    if (isset($first_item['url']) && $first_item['url'] == base_path()) {
      if (isset($breadcrumbs_home) && $breadcrumbs_home === 1) {
        $variables['breadcrumb'];
      } else {
        array_shift($variables['breadcrumb']);
      }
    }
  } else {
    $variables['breadcrumb'] = '';
  }
}

/**
 * Override or insert variables into the html template.
 */
function corporateclean_process_html(&$vars) {
	// Hook into color.module
	if (module_exists('color')) {
	_color_html_alter($vars);
	}

}

/**
 * Override or insert variables into the page template.
 */
function corporateclean_process_page(&$variables) {
  // Hook into color.module.
  if (module_exists('color')) {
    _color_page_alter($variables);
  }

}

function corporateclean_form_alter(&$form, &$form_state, $form_id) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();

  if ($form_id == 'search_block_form') {
    unset($form['search_block_form']['#title']);

    $form['search_block_form']['#title_display'] = 'invisible';
		$form_default = t('Search');
    $form['search_block_form']['#default_value'] = $form_default;
    $form['actions']['submit'] = array('#type' => 'image_button', '#src' => 'themes/' . $theme . '/images/search-button.png');

 	$form['search_block_form']['#attributes'] = array('onblur' => "if (this.value == '') {this.value = '{$form_default}';}", 'onfocus' => "if (this.value == '{$form_default}') {this.value = '';}" );
  }
}

/**
 * Add javascript files for jquery slideshow.
 */
/*if (theme_get_setting('slideshow_js','corporateclean')):

	drupal_add_js(drupal_get_path('theme', 'corporateclean') . '/js/jquery.cycle.all.js');

	//Initialize slideshow using theme settings
	$effect=theme_get_setting('slideshow_effect','corporateclean');
	$effect_time= (int) theme_get_setting('slideshow_effect_time','corporateclean')*1000;
	$slideshow_randomize=theme_get_setting('slideshow_randomize','corporateclean');
	$slideshow_wrap=theme_get_setting('slideshow_wrap','corporateclean');
	$slideshow_pause=theme_get_setting('slideshow_pause','corporateclean');

	drupal_add_js('jQuery(document).ready(function($) {

	$(window).load(function() {

		$("#slideshow img").show();
		$("#slideshow").fadeIn("slow");
		$("#slider-controls-wrapper").fadeIn("slow");

		$("#slideshow").cycle({
			fx:    "'.$effect.'",
			speed:  "slow",
			timeout: "'.$effect_time.'",
			random: '.$slideshow_randomize.',
			nowrap: '.$slideshow_wrap.',
			pause: '.$slideshow_pause.',
			pager:  "#slider-navigation",
			pagerAnchorBuilder: function(idx, slide) {
				return "#slider-navigation li:eq(" + (idx) + ") a";
			},
			slideResize: true,
			containerResize: false,
			height: "auto",
			fit: 1,
			before: function(){
				$(this).parent().find(".slider-item.current").removeClass("current");
			},
			after: onAfter
		});
	});

	function onAfter(curr, next, opts, fwd) {
		var $ht = $(this).height();
		$(this).parent().height($ht);
		$(this).addClass("current");
	}

	$(window).load(function() {
		var $ht = $(".slider-item.current").height();
		$("#slideshow").height($ht);
	});

	$(window).resize(function() {
		var $ht = $(".slider-item.current").height();
		$("#slideshow").height($ht);
	});

	});',
	array('type' => 'inline', 'scope' => 'footer', 'weight' => 5)
	);

endif;
*/

?>
